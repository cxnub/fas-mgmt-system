{
    "swagger": "2.0",
    "info": {
        "description": "This is the API documentation for FAS Management System.",
        "title": "FAS Management System API",
        "contact": {},
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "host": "http://localhost:8080",
    "basePath": "/api",
    "paths": {
        "/applicants": {
            "get": {
                "description": "Retrieves and returns a list of all registered applicants.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Applicants"
                ],
                "summary": "List All Applicants",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of applicants.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/http.ApplicantResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Handles the creation of a new applicant by accepting necessary data and storing it in the system.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Applicants"
                ],
                "summary": "Create a new Applicant",
                "parameters": [
                    {
                        "description": "Payload for creating a new applicant",
                        "name": "CreateApplicantRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.CreateApplicantRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created applicant.",
                        "schema": {
                            "$ref": "#/definitions/http.ApplicantResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/applicants/{id}": {
            "get": {
                "description": "Retrieves the details of a single applicant using their unique identifier.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Applicants"
                ],
                "summary": "Retrieve Applicant by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Applicant ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved applicant.",
                        "schema": {
                            "$ref": "#/definitions/http.ApplicantResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Applicant Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates the specified applicant's details based on the provided payload.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Applicants"
                ],
                "summary": "Update an Applicant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Applicant ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Payload for updating an applicant",
                        "name": "UpdateApplicantRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.UpdateApplicantRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated applicant.",
                        "schema": {
                            "$ref": "#/definitions/http.ApplicantResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Applicant Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes the applicant with the specified ID from the system.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Applicants"
                ],
                "summary": "Delete an Applicant",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Applicant ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted applicant.",
                        "schema": {
                            "$ref": "#/definitions/http.Response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Applicant Not Found",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/applications": {
            "get": {
                "description": "Retrieve all applications present in the system.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Applications"
                ],
                "summary": "List all applications",
                "responses": {
                    "200": {
                        "description": "Applications retrieved successfully.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/http.ApplicationsResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new application using the specified applicant ID and scheme ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Applications"
                ],
                "summary": "Create a new application",
                "parameters": [
                    {
                        "description": "Application creation payload",
                        "name": "CreateApplicationRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.CreateApplicationRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Application created successfully.",
                        "schema": {
                            "$ref": "#/definitions/http.ApplicationResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input data.",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/applications/{id}": {
            "get": {
                "description": "Get details of an application by its unique ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Applications"
                ],
                "summary": "Retrieve application by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Application retrieved successfully.",
                        "schema": {
                            "$ref": "#/definitions/http.ApplicationResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid UUID or bad input.",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Application not found.",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an application's details such as ApplicantID or SchemeID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Applications"
                ],
                "summary": "Update an application by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Application update payload",
                        "name": "UpdateApplicationRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.UpdateApplicationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Application updated successfully.",
                        "schema": {
                            "$ref": "#/definitions/http.ApplicationResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid input data.",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Application not found.",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove an application from the system using its unique ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Applications"
                ],
                "summary": "Delete an application by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Application deleted successfully.",
                        "schema": {
                            "$ref": "#/definitions/http.Response"
                        }
                    },
                    "400": {
                        "description": "Invalid UUID or bad input.",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Application not found.",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error.",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/schemes": {
            "get": {
                "description": "Retrieve a comprehensive list of all available schemes.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schemes"
                ],
                "summary": "List all schemes",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of schemes",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/http.SchemeResponse"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Add a new scheme with the provided details.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schemes"
                ],
                "summary": "Create a new scheme",
                "parameters": [
                    {
                        "description": "JSON object containing new scheme details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.CreateSchemeRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successfully created scheme",
                        "schema": {
                            "$ref": "#/definitions/http.SchemeResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error occurred",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/schemes/applicant": {
            "get": {
                "description": "Retrieve a list of schemes available for a specific applicant using their unique identifier.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schemes"
                ],
                "summary": "List Applicant Available Schemes",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Applicant ID",
                        "name": "applicant",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved available schemes",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/http.SchemeResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error occurred",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Applicant not found",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/schemes/{id}": {
            "get": {
                "description": "Retrieve a scheme using its unique identifier.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schemes"
                ],
                "summary": "Get Scheme by ID",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Scheme ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved scheme",
                        "schema": {
                            "$ref": "#/definitions/http.SchemeResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error occurred",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Scheme not found",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Modify the details of an existing scheme using its unique identifier.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schemes"
                ],
                "summary": "Update an existing scheme",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Scheme ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "JSON object with updates to the scheme",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.UpdateSchemeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully updated scheme",
                        "schema": {
                            "$ref": "#/definitions/http.SchemeResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error occurred",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Scheme not found",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Remove a scheme from the system using its unique identifier.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schemes"
                ],
                "summary": "Delete a scheme",
                "parameters": [
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "Scheme ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted scheme",
                        "schema": {
                            "$ref": "#/definitions/http.Response"
                        }
                    },
                    "400": {
                        "description": "Validation error occurred",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Scheme not found",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/http.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.EmploymentStatus": {
            "type": "string",
            "enum": [
                "employed",
                "unemployed"
            ],
            "x-enum-varnames": [
                "EmploymentStatusEmployed",
                "EmploymentStatusUnemployed"
            ]
        },
        "domain.MaritalStatus": {
            "type": "string",
            "enum": [
                "single",
                "married",
                "widowed",
                "divorce"
            ],
            "x-enum-varnames": [
                "MaritalStatusSingle",
                "MaritalStatusMarried",
                "MaritalStatusWidowed",
                "MaritalStatusDivorce"
            ]
        },
        "domain.Sex": {
            "type": "string",
            "enum": [
                "male",
                "female"
            ],
            "x-enum-varnames": [
                "SexMale",
                "SexFemale"
            ]
        },
        "http.ApplicantResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "date_of_birth": {
                    "type": "string",
                    "example": "2000-01-01"
                },
                "employment_status": {
                    "type": "string",
                    "example": "employed"
                },
                "id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "marital_status": {
                    "type": "string",
                    "example": "married"
                },
                "name": {
                    "type": "string",
                    "example": "John Doe"
                },
                "sex": {
                    "type": "string",
                    "example": "male"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                }
            }
        },
        "http.ApplicationResponse": {
            "type": "object",
            "properties": {
                "applicant_id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "created_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                },
                "id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "scheme_id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "updated_at": {
                    "type": "string",
                    "example": "2021-01-01T00:00:00Z"
                }
            }
        },
        "http.ApplicationsResponse": {
            "type": "object",
            "properties": {
                "applications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/http.ApplicationResponse"
                    }
                }
            }
        },
        "http.CreateApplicantRequest": {
            "type": "object",
            "required": [
                "date_of_birth",
                "employment_status",
                "marital_status",
                "name",
                "sex"
            ],
            "properties": {
                "date_of_birth": {
                    "type": "string"
                },
                "employment_status": {
                    "$ref": "#/definitions/domain.EmploymentStatus"
                },
                "marital_status": {
                    "$ref": "#/definitions/domain.MaritalStatus"
                },
                "name": {
                    "type": "string"
                },
                "sex": {
                    "$ref": "#/definitions/domain.Sex"
                }
            }
        },
        "http.CreateApplicationRequest": {
            "type": "object",
            "required": [
                "applicant_id",
                "scheme_id"
            ],
            "properties": {
                "applicant_id": {
                    "type": "string"
                },
                "scheme_id": {
                    "type": "string"
                }
            }
        },
        "http.CreateSchemeRequest": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "http.ErrorResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "example": {
                        "field": "error description"
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Error message"
                },
                "success": {
                    "type": "boolean",
                    "example": false
                }
            }
        },
        "http.Response": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string",
                    "example": "Success"
                },
                "success": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "http.SchemeBenefitResponse": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "number",
                    "example": 1000000
                },
                "name": {
                    "type": "string",
                    "example": "CDC Vouchers"
                }
            }
        },
        "http.SchemeCriteriaResponse": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "employment_status"
                },
                "value": {
                    "type": "string",
                    "example": "unemployed"
                }
            }
        },
        "http.SchemeResponse": {
            "type": "object",
            "properties": {
                "benefits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/http.SchemeBenefitResponse"
                    }
                },
                "criteria": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/http.SchemeCriteriaResponse"
                    }
                },
                "id": {
                    "type": "string",
                    "example": "00000000-0000-0000-0000-000000000000"
                },
                "name": {
                    "type": "string",
                    "example": "Retrenchment Assistance Scheme"
                }
            }
        },
        "http.UpdateApplicantRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "date_of_birth": {
                    "type": "string"
                },
                "employment_status": {
                    "$ref": "#/definitions/domain.EmploymentStatus"
                },
                "id": {
                    "type": "string"
                },
                "marital_status": {
                    "$ref": "#/definitions/domain.MaritalStatus"
                },
                "name": {
                    "type": "string"
                },
                "sex": {
                    "$ref": "#/definitions/domain.Sex"
                }
            }
        },
        "http.UpdateApplicationRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "applicant_id": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "scheme_id": {
                    "type": "string"
                }
            }
        },
        "http.UpdateSchemeRequest": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}